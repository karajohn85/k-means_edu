Ο αλγόριθμος αναπτύχθηκε σε εικονικό περιβάλλον Jupyter notebook και το αρχείο .ipynb (interactive python notebook) στο οποίο περιέχεται, 
απαιτεί το περιβάλλον αυτό για να τρέξει. 
Στο κεφάλαιο 2 της εργασίας, αναφέρονται οι ακριβείς εκδόσεις του απαραίτητου λογισμικού και των βιβλιοθηκών που χρησιμοποιήθηκαν. 
Το αρχείο .ipynb που περιέχει τον κώδικα, μπορεί να βρεθεί στο αποθετήριο github, το οποίο εξυπηρετεί το διαμοιρασμό του, στην παρακάτω διεύθυνση: 
github.com/karajohn85/k-means_edu
Για να ξεκινήσει ο αλγόριθμος, απαιτεί την εισαγωγή των προς επεξεργασία δεδομένων από το χρήστη σε αρχείο .csv. 
Όπως θα δούμε και παρακάτω, κατά την εισαγωγή αλλά και καθ’ όλη τη διάρκεια των υπολογισμών και των αποτελεσμάτων του αλγορίθμου, τα δεδομένα έχουν μορφή pandas dataframe.
 

Το πρώτο βήμα στην εκτέλεση του αλγορίθμου είναι η εισαγωγή των απαραίτητων βιβλιοθηκών. 
Σε αυτό το βήμα δεν χρειάζεται κάποια παρέμβαση του χρήστη διότι γίνεται αυτόματα. 
Το επόμενο βήμα αποτελεί την εισαγωγή και ανάγνωση του προς επεξεργασία .csv αρχείου. 
Το αρχείο .csv θα πρέπει να βρίσκεται στον ίδιο φάκελο με τα αρχεία του αλγορίθμου που τρέχουμε. 
Το αρχείο αυτό προς διευκόλυνση μας θα πρέπει να περιέχει επικεφαλίδες (headers) στην πρώτη γραμμή των δεδομένων. 
Προς διευκόλυνση των παρακάτω στιγμιότυπων και απεικονίσεων χρησιμοποιούμε το δημοφιλές σύνολο δεδομένων (dataset) USArrests (McNeil, 1977). 
Σε αυτό λοιπόν το σημείο ο χρήστης καλείται να εισάγει το όνομα του αρχείου (χωρίς την κατάληξη).

 
Τα δεδομένα του αρχείου μετατρέπονται σε pandas dataframe και το αποτέλεσμα που εμφανίζεται είναι το σχήμα (shape) του 
καθώς και οι 5 πρώτες σειρές δεδομένων με τις επικεφαλίδες (head).
 
 
Στο επόμενο βήμα ο χρήστης εισάγει τα ονόματα των επικεφαλίδων για το x και y άξονα που θα επιλέξει να χρησιμοποιηθούν στην ανάλυση. 
Ταυτόχρονα με την εισαγωγή αυτή, γίνεται ανάθεση των δεδομένων των στηλών αυτών σε ένα νέο dataframe. 
Το dataframe αυτό υπόκειται αυτόματα σε αυτό το βήμα σε κανονικοποίηση με τον MinMaxScaler της βιβλιοθήκης sklearn 
και τα δεδομένα μας εμφανίζονται σε ένα διάγραμμα διασποράς (scatterplot). 
 

Στη συνέχεια τρέχουν τα βασικά τμήματα του αλγορίθμου για τον υπολογισμό της αδράνειας (inertia) και του k-means, 
αλλά ως functions χωρίς αποτέλεσμα, με σκοπό να ερωτηθεί στη συνέχεια ο χρήστης αν θέλει να εκτελέσει τον υπολογισμό της αδράνειας πριν το βασικό κομμάτι του κώδικα. 
Σε περίπτωση που η απάντηση στην ερώτηση είναι θετική, ο χρήστης ερωτάται για το μέγιστο αριθμό k συστάδων που θέλει να εκτελέσει τον υπολογισμό της αδράνειας. 
Το αποτέλεσμα είναι η εμφάνιση του elbow plot για των αριθμό συστάδων που επέλεξε ο χρήστης. 
Σε περίπτωση που ο χρήστης απαντήσει αρνητικά στον υπολογισμό και εμφάνιση του elbow plot, ο αλγόριθμος προχωρά στο επόμενο και κυρίως μέρος του υπολογισμού του k-means.
 

Επιπλέον ο χρήστης λαμβάνει ως αποτέλεσμα τις ακριβείς τιμές της αδράνειας για κάθε βήμα σε μορφή λίστας.


Έπειτα ο χρήστης ερωτάται τον αριθμό k για τον οποίο επιθυμεί να τρέξει τον αλγόριθμο.
 
Με τη βοήθεια του παραπάνω elbow plot, επιλέγουμε τον αριθμό 3 που φαίνεται ότι θα εξηγεί αρκετά καλά τα συγκεκριμένα δεδομένα 
και πλέον ο αλγόριθμος τρέχει το βασικό κομμάτι του. Αρχικά επιλέγονται k τυχαία σημεία (εδώ 3 σημεία) από τις παρατηρήσεις τα οποία θα αποτελούν τα αρχικά κέντρα. 

 
Τα τυχαία αυτά σημεία αυτά εμφανίζονται με το σύνολο των δεδομένων σε χρώμα κόκκινο.
 
Στη συνέχεια ο αλγόριθμος ενημερώνει το χρήστη για τους υπολογισμούς της πρώτης επανάληψης.
 

Στις δύο πρώτες στήλες εμφανίζονται οι παρατηρήσεις μας και στις τρεις επόμενες είναι η Ευκλείδεια απόσταση της κάθε παρατήρησης από το εκάστοτε κέντρο 
που αντιπροσωπεύεται με τις στήλες (π.χ. dist_centr_0 -> απόσταση των παρατηρήσεων από το κέντρο 0). 
Στη στήλη «min_dist» εμφανίζεται η το όνομα του κέντρου για το οποίο η κάθε παρατήρηση εμφανίζει την ελάχιστη απόσταση, 
άρα και η ανάθεση στην αντίστοιχη συστάδα (π.χ. dist_centr_2 -> ανάθεση παρατήρησης στη συστάδα 2).
Μετά από τους υπολογισμούς, ο χρήστης λαμβάνει πληροφόρηση για τις συντεταγμένες των νέων κέντρων:
 

Εδώ βλέπουμε ότι από την πρώτη επανάληψη έχουν προκύψει νέα κέντρα για τις τρεις συστάδες.
Τα νέα αυτά κέντρα εμφανίζονται σε διάγραμμα διασποράς μαζί με τις παρατηρήσεις όπου πλέον φαίνεται με διαφορετικό χρώμα και η ανάθεσή τους στις συστάδες.

 


Η παραπάνω διαδικασία επαναλαμβάνεται για όσες φορές χρειαστεί μέχρι να υπάρξει σύγκλιση, 
δηλαδή τα σημεία να μην εμφανίζουν αλλαγή συστάδας σε κάθε επανάληψη και συγκεκριμένα οι συντεταγμένες των κέντρων να μην αλλάξουν για δύο διαδοχικές επαναλήψεις. 
Σε αυτή την περίπτωση ο χρήστης λαμβάνει το τελικό διάγραμμα διασποράς καθώς και την ενημέρωση για τη σύγκλιση και σε ποια επανάληψη αυτή εμφανίστηκε.
 

Στο παραπάνω διάγραμμα διασποράς παρατηρούμε ότι ο τίτλος αναφέρει τρίτη επανάληψη (iteration number 3), 
ενώ το αποτέλεσμα αναφέρει σύγκλιση στη δεύτερη επανάληψη (converged at iteration 2). 
Αυτό συμβαίνει διότι ο k-means αλγόριθμος χρειάζεται να κάνει επαναλήψεις μέχρι να καταλήξει σε αποτέλεσμα όπου τα κέντρα των συστάδων δεν μετακινούνται πλέον 
και όλα τα σημεία παραμένουν στις ίδιες ακριβώς συστάδες. 
Στη συγκεκριμένη περίπτωση έφτασε μέχρι και την τρίτη επανάληψη και αφού σύγκρινε τα αποτελέσματά της με αυτά της δεύτερης επανάληψης, 
κατέληξε σε αποτέλεσμα. Δηλαδή τα κέντρα που προέκυψαν και οι αναθέσεις παρατηρήσεων σε αυτά της δεύτερης επανάληψης, είναι τα τελικά και δεν αλλάζουν πλέον.
Τα διαγράμματα διασποράς που θα προκύψουν αποθηκεύονται στο φάκελο εκτέλεσης της python με ονομασία αρχείου «αριθμός επανάληψης.jpeg», 
οπότε για παράδειγμα με την τρίτη επανάληψη θα προκύψει το αρχείο «3.jpeg». Το αρχείο «0.jpeg» θα είναι πάντα αυτό με τις αρχικές τυχαίες αναθέσεις σημείων σε κέντρα. 
